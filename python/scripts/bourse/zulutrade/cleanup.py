#!/usr/bin/python
# -*- coding: utf-8 -*-

import sys, getopt, os.path
programname = 'cleanup - version 2010-06-06 - http://www.celles.net/'

def usage(progname):
    ''' Display program usage. '''
    progname = os.path.split(progname)[1]
    if os.path.splitext(progname)[1] in ['.py','.pyc']: progname = 'python '+progname
    return '''{0}
A script to cleanup file.

Syntax    : {1} source destination

Arguments : 'source' is the file you want to cleanup (replace, ...)
            'destination' is the new (and clean) file generated by this script

Examples   : {1} source.html cleaned_file.html

    Copyright (C) 2011  "SÃ©bastien CELLES" <s.celles@gmail.com>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>
'''.format(programname, progname)

def error():
    print(usage(sys.argv[0]))  # print help information and exit:
    sys.exit(2)
    
def cleanup(data):
    data = data.replace('<br/>','__br__') #py2
    data = data.replace('<br />','__br__')
    data = data.replace('&lt;','<')
    #data = re.sub('style="()"', '', data)
    return(data)

if __name__ == "__main__":
    try: # Put getopt in place for future usage.
        (opts, args) = getopt.getopt(sys.argv[1:],None)
    except getopt.GetoptError:
        error()
    if len(args) != 2:
        error()
    print(programname)
    
    source_filename = args[0]
    source_file = open(source_filename, 'rb')

    destination_filename = args[1]
    destination_file = open( destination_filename, 'w+b')

    print 'Reading {0}, writing {1}...'.format(source_filename, destination_filename)

    data = source_file.read()

    data = cleanup(data)
    
    #print(data)
    destination_file.write(data)
    
    source_file.close()
    destination_file.close()

    print('All done.')